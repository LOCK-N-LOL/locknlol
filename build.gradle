buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

def queryDslOutput = file("src/main/java/generated")

sourceSets {
	main {
		java {
			srcDir "src/main/java/generated"
		}
	}
}

task generateJpaMetaModel(type: JavaCompile, group: 'other') {
	doFirst {
		if (!queryDslOutput.exists()) {
			logger.info("Creating `$queryDslOutput` directory")

			if (!queryDslOutput.mkdirs()) {
				throw new InvalidUserDataException("Unable to create `$queryDslOutput` directory")
			}
		}
	}

	source = sourceSets.main.java
	classpath = configurations.compile
	options.compilerArgs = [
			"-proc:only",
			"-processor",
			"com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = queryDslOutput
}

compileTestJava.dependsOn(generateJpaMetaModel)

clean {
	delete queryDslOutput
}

dependencies {
	def querydslVersion = "4.1.4"

	/**
	 * querydsl dependency
	 */
	compile ("com.querydsl:querydsl-core")
	compile ("com.querydsl:querydsl-apt")
	compile ("com.querydsl:querydsl-jpa")

	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.projectlombok:lombok')
	compile('pl.allegro.tech.boot:handlebars-spring-boot-starter:0.2.15')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
